---
title: "Senvion M92: Monte Carlo Simulation"
subtitle: "Kelmarsh Wind Farm - 12.3 MW"
author: "Jorge A. Thomas"
date: "`r Sys.Date()`"
format:    
    html:
      theme: default
      self-contained: true
      code-fold: true
      df-print: tibble
      code-summary: "Show the code"
      toc: true
      toc-depth: 2
      grid: 
        margin-width: 350px      
execute: 
  echo: false
  engine: knitr
  engine-opt:
    r.path: "C:/Program Files/R/R-4.4.3/bin/R.exe"  
reference-location: margin 
citation-location: document
bibliography: references.bib
nocite: '@*'
---

```{r}
#| label: load-packages
#| echo: false

library(tidyverse)
library(plotly)
library(arrow)
library(here)
library(dunn.test)


#| label: setup-paths
fpath_processed <- "../data/processed"
fpath_interim <- "../data/interim/"
fpath_online <- "./online_assets/"

source(here("src", "R", "utils", "jthomfuncs.r"))
# theme_set(jthomggtheme)

relia <- read_parquet(here("data", "processed", "Kelmarsh_reliability_paramaters_2016_2022_n42_cols12.parquet"))

# to categoricals

relia <- relia |>
  mutate(Year = as.factor(Year)) |>
  mutate(Turbine = as.factor(Turbine))
  
relia$icon <- NULL
glimpse(relia)
```

## Check Homogeneity

To determine whether the failure rates of the six turbines can be grouped together and represent the reliability of one turbine model, you can analyze the data statistically. Here are some steps you can follow:

1. Check Homogeneity
Verify whether the failure rates are consistent across all six turbines. This can be done using statistical tests to assess variance, such as:

ANOVA (Analysis of Variance): If the failure rates are continuous and you want to check whether they are significantly different between turbines.

Levene's Test or Bartlett's Test: To specifically assess equality of variances.

2. Calculate Summary Statistics
Compute measures such as the mean, median, standard deviation, and confidence intervals for failure rates. If these statistics indicate similar central tendencies and spread across turbines, it supports the idea of grouping them.

3. Analyze Patterns
Plot the data (e.g., using a box plot or scatter plot) to visually inspect whether the failure rates have similar distributions across turbines.

4. Cluster Analysis (if needed)
If you suspect outliers or sub-groups within the turbines, use clustering techniques to see if the turbines naturally fall into distinct groups based on their failure rates.

5. Perform a Reliability Analysis
Assuming homogeneity is confirmed, you can pool the failure rates and conduct reliability analysis:

Estimate the reliability metrics, such as Mean Time Between Failures (MTBF) or probability of failure within a given timeframe.

Fit statistical models such as Weibull or exponential distributions if the failure rates follow a specific trend.

6. Investigate External Factors
Ensure there arenâ€™t external influences (e.g., installation conditions, maintenance practices, or environmental factors) causing differences among turbines. Such confounding factors could invalidate grouping the turbines as representative of the same reliability.

```{r}
#| label: failure-rate-plot

ggplot(relia, aes(x=Year, y=`Failure Rate`, colour = Turbine)) +
  ggtitle("Failure Rate") +
  geom_line() + 
  facet_grid(~Turbine) + 
  labs(y=expression(lambda ~ "[h"^{-1}*"]")) +
  theme(legend.position = "none", axis.title.y = element_text(angle = 0, vjust = 0.5))


```

```{r}

# For years
boxplt_years <- ggplot(relia, aes(x = as.factor(Year), y = `Failure Rate`, fill = as.factor(Year))) +
  geom_violin(alpha = 0.5) +
  geom_boxplot(width = 0.2, alpha = 0.8) +
  geom_jitter(color = "black", size = 0.5, alpha = 0.3) +
  labs(x = "Year",
       y = "Failure Rate [1/h]",
       title = "Distribution of Failure Rates by Year") +
  theme_minimal() +
  theme(legend.position = "none")

ggplotly(boxplt_years)


```

```{r}
# For turbines
boxplt_turbines <- ggplot(relia, aes(x = as.factor(Turbine), y = `Failure Rate`, fill = as.factor(Turbine)) +
  geom_violin(alpha = 0.5) +
  geom_boxplot(width = 0.2, alpha = 0.8) +
  geom_jitter(color = "black", size = 0.5, alpha = 0.3) +
  labs(y = "Failure Rate [1/h]", 
       title = "Distribution of Failure Rates by Turbine") +
  theme_minimal() +
  theme(legend.position = "none")
  
ggplotly(boxplt_turbines)

```

```{r}
boxplt_turbines <- ggplot(relia, aes(x = Turbine, y = `Failure Rate`, colour=Turbine)) +
  geom_boxplot() +
  geom_jitter() +
  labs(y = "Failure Rate [1/h]") +
  # labs(y=expression(lambda ~ "[h"^{-1}*"]")) +
 # facet_wrap(~Year) +  
  theme(legend.position = "none")
  
ggplotly(boxplt_turbines)  
```

```{r}

boxplt_years <- ggplot(relia, aes(x = Year, y = `Failure Rate`, colour=as.factor(Year))) +
  geom_boxplot() +
  geom_jitter() +
  labs(y = "Failure Rate [1/h]") +  # Changed to plain text
  #labs(y=expression(lambda ~ "[h"^{-1}*"]")) +  
  theme(legend.position = "none", axis.title.y = element_text(angle = 0, vjust = 0.5))

plot(boxplt_years)
# ggplotly(boxplt_years) 


```

### Between Turbines

```{r}
#| label: statistical-tests
#| warning: false

# Summary statistics by turbine
summary_stats <- relia %>%
  group_by(Turbine) %>%
  summarise(
    mean = mean(`Failure Rate`),
    median = median(`Failure Rate`),
    sd = sd(`Failure Rate`),
    n = n()
  )

print("Summary Statistics by Turbine:")
print(summary_stats)

# ANOVA test for means
anova_result <- aov(`Failure Rate` ~ Turbine, data = relia)
print("\nANOVA Test Results:")
print(summary(anova_result))

# Kruskal-Wallis test for medians
kw_test <- kruskal.test(`Failure Rate` ~ Turbine, data = relia)
print("\nKruskal-Wallis Test Results:")
print(kw_test)

# Post-hoc tests if significant differences are found
if(kw_test$p.value < 0.05) {
  # Dunn test for pairwise comparisons
  
  dunn_result <- dunn.test(relia$`Failure Rate`, relia$Turbine, method="bonferroni")
  print("\nDunn's Test Results (pairwise comparisons):")
  print(dunn_result)
  }

```

### Between Years

```{r}
#| label: stat-test-frate-years
#| eval: true

# Summary statistics by turbine
summary_stats <- relia %>%
  group_by(Year) %>%
  summarise(
    mean = mean(`Failure Rate`),
    median = median(`Failure Rate`),
    sd = sd(`Failure Rate`),
    n = n()
  )

print("Summary Statistics by Year:")
print(summary_stats)

# ANOVA test for means
anova_result <- aov(`Failure Rate` ~ Year, data = relia)
print("\nANOVA Test Results:")
print(summary(anova_result))

# Kruskal-Wallis test for medians
kw_test <- kruskal.test(`Failure Rate` ~ Year, data = relia)
print("\nKruskal-Wallis Test Results:")
print(kw_test)

# Post-hoc tests if significant differences are found
if(kw_test$p.value < 0.05) {
  # Dunn test for pairwise comparisons  
  dunn_result <- dunn.test(relia$`Failure Rate`, relia$Year, method="bonferroni", kw=FALSE, label=TRUE)
  print("\nDunn's Test Results (pairwise comparisons):")
  print(dunn_result)
}


```
