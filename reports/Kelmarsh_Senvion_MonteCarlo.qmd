---
title: "Senvion M92: Monte Carlo Simulation"
subtitle: "Kelmarsh Wind Farm - 12.3 MW"
author: "Jorge A. Thomas"
date: "`r Sys.Date()`"
format:    
    html:
      theme: default
      self-contained: true
      code-fold: true
      df-print: tibble
      code-summary: "Show the code"
      toc: true
      toc-depth: 2
      grid: 
        margin-width: 350px      
execute: 
  echo: false
  engine: knitr
  engine-opt:
    r.path: "C:/Program Files/R/R-4.4.3/bin/R.exe"  
reference-location: margin 
citation-location: document
bibliography: references.bib
nocite: '@*'
---

```{r}
#| label: load-packages
#| echo: false

library(tidyverse)
library(plotly)
library(arrow)
library(here)
library(dunn.test)
library(fitdistrplus)
library(gt)
library(patchwork)
library(paletteer)


fpath_processed <- "../data/processed"
fpath_interim <- "../data/interim/"
fpath_online <- "./online_assets/"

source(here("src", "R", "utils", "jthomfuncs.r"))
# theme_set(jthomggtheme)

relia <- read_parquet(here("data", "processed", "Kelmarsh_reliability_paramaters_2016_2022_n42_cols12.parquet"))
ttf <- read_parquet(here("data", "processed", "Kelmarsh_time-to-failure_2016_2022_n929_cols8.parquet"))
ttr <- read_parquet(here("data", "processed", "Kelmarsh_time-to-repair_2016_2022_n889_cols8.parquet"))

# to categoricals
cats_feats <- c("Year", "Turbine")

relia <- relia |>  
  mutate(Turbine = as.factor(Turbine))

relia$icon <- NULL

ttf <- ttf |>
  mutate(across(all_of(cats_feats), ~ factor(.x, ordered = TRUE)))

ttr <- ttr |>
  mutate(across(all_of(cats_feats), ~ factor(.x, ordered = TRUE)))       

```

## Failure Rate Analysis 

### Checking for Homogeneity

```{r}
#| label: failure-rate-plot
#| eval: false

plt_bathtub <- ggplot(relia, aes(x=Year, y=`Failure Rate`, colour = Turbine)) +
  ggtitle("Bathtub Curve?") +
  geom_line() + geom_point() +
  #facet_grid(~Turbine) + 
  labs(y=expression(lambda ~ "[h"^{-1}*"]")) +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5))

```

### Between Turbines

```{r}
#| label: stat-test-frate-turbines
#| warning: false

# Summary statistics by turbine

relia |>
  group_by(Turbine) |>
  summarise(
    mean = mean(`Failure Rate`),
    median = median(`Failure Rate`),
    sd = sd(`Failure Rate`),
    n = n())

# summary_stats

dunn_result_wt <- dunn.test(relia$`Failure Rate`, relia$Turbine, method="none", kw=TRUE, label=TRUE, wrap=TRUE)

```

### Between Years

```{r}
#| label: best-plot-clusters-years
#| eval: true

relia <- relia |>  
  mutate(Year = as.factor(Year))

plt_boxplt_years <- ggplot(relia, aes(x = Year, y = `Failure Rate`)) +
  # geom_boxplot(fill = "grey", color = "black", alpha = 0.3) +  
  #see::geom_violinhalf(position = position_nudge(x = .2, y = 0), fill = "grey") +
  geom_violin(alpha = 0.5, fill="grey", adjust=0.75) +
  geom_dotplot(aes(color=Turbine, fill=Turbine), dotsize = 0.4, binaxis="y", show.legend=TRUE, stackdir= "center", alpha = 0.8) +
  stat_summary(fun=median, show.legend=FALSE, geom="crossbar", alpha=0.5, width=0.7) +
  # geom_jitter(aes(color=Turbine)) +    
  annotate("rect", xmin = 1.5, xmax = 6.5, ymin = -Inf, ymax = Inf, fill = "darkgreen", alpha = 0.1) +
  labs(y=expression(lambda ~ "[h"^{-1}*"]"), x="") +  
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +    
    # scale_color_paletteer_d("nationalparkcolors::Acadia") +
    # scale_fill_paletteer_d("nationalparkcolors::Acadia") +
    # paletteer_d("nationalparkcolors::Acadia") +
  ggtitle("Yearly Failure Rates of Kelmarsh Wind Turbines")

plot(plt_boxplt_years)

```

```{r}
#| label: stat-test-frate-years
#| eval: false

# Summary statistics by Year
relia |>
  group_by(Year) |>
  summarise(mean = mean(`Failure Rate`), median = median(`Failure Rate`), sd = sd(`Failure Rate`), n = n())

dunn_result_year <- dunn.test(relia$`Failure Rate`, relia$Year, method="none", kw=TRUE, label=TRUE, wrap=TRUE)
```

Years from 2017 and 2021 represents a cluster of the Senvion M92 wind turbines.

- This assumes anemometer problem was fixed!
- Great base line operation monitoring

## Homogenous Failure Rate for Kelmarsh

```{r}
#| label: filter-2017to2021

relia_2017_2021 <- relia |> 
 filter(Year != 2016 & Year != 2022)

```

```{r}
#| label: plot-lambda-per-wt

img <- cowplot::ggdraw() + cowplot::draw_image("./reports/online_assets/turbine-senvion_mm92.jpg")

plt_boxplt_wt <- ggplot(relia_2017_2021,  aes(x = Turbine, y = `Failure Rate`, colour=Turbine)) + 
  geom_violin(alpha = 0.5, fill="grey", adjust=0.75) +
  geom_dotplot(aes(color=Turbine, fill=Turbine), dotsize = 0.3, binaxis="y", show.legend=FALSE, stackdir= "center", alpha = 0.8) +
  stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", alpha=0.5, width=0.7) +
  stat_summary(fun = mean, geom = "text", aes(label = round(..y.., 5)), vjust = -1.2, color = "black",fontface = "bold") +  
  labs(y=expression(lambda ~ "[h"^{-1}*"]"), x="") +  
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  ggtitle("Mean Failure Rate per Turbine at Kelmarsh (2017-2021)")

plt_boxplt_years / (plt_boxplt_wt + img)

```

```{r}
#| label: constant-frates-per-turbine
#| eval: true

frates_cte <- relia_2017_2021 |>
  group_by(Turbine) |>
  summarise(mean(`Failure Rate`)) + mutate(icon="wind-turbine-icon-10")
```

## Repairing Rates

```{r}
# Distribution analysis

ttr_2017_2021 <- ttr |> 
 filter(Year != 2016 & Year != 2022)

ttf_2017_2021 <- ttf |> 
 filter(Year != 2016 & Year != 2022)

```

```{r}

ggplot(ttr_2017_2021, aes(x = TTR)) +
  geom_histogram(bins = 30, fill = "#1E88E5", color = "black", alpha = 0.7) +
  facet_grid(~Turbine) + 
  labs(title = "Histogram of Time To Repair (TTR)",
       x = "Time To Repair (hours)",
       y = "Count") +
  theme_minimal()


```


```{r}
#| label: best-plot-clusters-years-repair
#| eval: true

plt_boxplt_years_r <- ggplot(relia, aes(x = Year, y = MTTR)) +
  #geom_boxplot(fill = "grey", color = "black", alpha = 0.3) +  
  geom_violin(alpha = 0.5) +
  geom_jitter(aes(color=Turbine)) +  
  #labs(y = "Repair Rate [1/h]") +  # Changed to plain text
  labs(y=expression(mu ~ "[h"^{-1}*"]"), x="") +  
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  ggtitle("Yearly Repair Rates of Kelmarsh Wind Turbines")

plot(plt_boxplt_years_r)

```


```{r}
#| label: best-plot-clusters-turbines-repair
#| eval: true

plt_boxplt_turbines_r <- ggplot(relia_2017_2021, aes(x = Turbine, y = 1/MTTR)) +
  geom_boxplot(fill = "grey", color = "black", alpha = 0.3) +  
  # geom_violin(alpha = 0.5) +
  geom_jitter(aes(color=Turbine)) +  
  #labs(y = "Repair Rate [1/h]") +  # Changed to plain text
  labs(y=expression(mu ~ "[h"^{-1}*"]"), x="") +  
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  ggtitle("Yearly Repair Rates of Kelmarsh Wind Turbines")

plot(plt_boxplt_turbines_r)
```

```{r}
#| label: ttf-filtered-distribution-analysis

find_best_fit <- function(turbine, duration) {

  df <- data.frame(turbine, duration)  
  
  # Fit distributions
  fit_weibull <- fitdist(df$duration, "weibull")
  fit_lnorm <- fitdist(df$duration, "lnorm")
  fit_exp <- fitdist(df$duration, "exp")  
  
  # Plot empirical vs theoretical distributions
  plt <- ggplot(df, aes(x = duration)) +
    geom_histogram(aes(y = after_stat(density)), bins = 80, fill = "#1E88E5", alpha = 0.7) +
    geom_density(color = "#FF5252", linewidth = 1) +
    stat_function(fun = dweibull, 
                  args = list(shape = fit_weibull$estimate[1], 
                              scale = fit_weibull$estimate[2]),
                  color = "darkgreen", linetype = "dashed") +
    stat_function(fun = dlnorm,
                  args = list(meanlog = fit_lnorm$estimate[1],
                              sdlog = fit_lnorm$estimate[2]),
                  color = "blue", linetype = "dashed") +
    stat_function(fun = dexp,
                  args = list(rate = fit_exp$estimate[1]),
                  color = "orange", linetype = "dashed") +

    labs(title = paste("Duration Distribution (TTR or TTF) with Fitted Curves", df$turbine[1]),
         x = "Duration (hours)",
         y = "Density") +
    theme_minimal()  

  # Goodness of fit plots
  # p6 <- ggplot(df, aes(sample = duration)) +
  #   stat_qq() +
  #   stat_qq_line(color = "#FF5252") +
  #   labs(title = "Q-Q Plot") +
  #   theme_minimal()
  
  # Print summary statistics and goodness of fit tests
  summary(df$duration)
  gof_stats <- gofstat(list(fit_weibull, fit_lnorm, fit_exp))
  print(gof_stats) 

  return(plt)
  
}


```

```{r}


# Loop over each Turbine and apply find_best_fit to TTR

for (turb in unique(ttf_2017_2021$Turbine)) 
  print("\nTurbine:", str(turb))
  df_sub <- ttr_2017_2021 |> filter(Turbine == turb)
  find_best_fit(turbine = df_sub$Turbine, duration = df_sub$TTR)

# find_best_fit(turbine=ttr_2017_2021$Turbine, duration=ttr_2017_2021$TTR)

```

```{r}


for (turb in unique_turbines) {
  print(paste("\nTurbine:", turb))
  df_sub <- ttf_2017_2021 |> filter(Turbine == turb)
  find_best_fit(turbine = df_sub$Turbine, duration = df_sub$TTF)
}

```

```{r}



# Fit distributions
fit_weibull <- fitdist(ttr_2017_2021$TTR, "weibull")
fit_lnorm <- fitdist(ttr_2017_2021$TTR, "lnorm")
fit_exp <- fitdist(ttr_2017_2021$TTR, "exp")

# Plot empirical vs theoretical distributions
p5 <- ggplot(ttr_2017_2021, aes(x = TTR)) +
  geom_histogram(aes(y = ..density..), bins = 30, fill = "#1E88E5", alpha = 0.7) +
  geom_density(color = "#FF5252", linewidth = 1) +
  stat_function(fun = dweibull, 
                args = list(shape = fit_weibull$estimate[1], 
                            scale = fit_weibull$estimate[2]),
                color = "darkgreen", linetype = "dashed") +
  stat_function(fun = dlnorm,
                args = list(meanlog = fit_lnorm$estimate[1],
                            sdlog = fit_lnorm$estimate[2]),
                color = "blue", linetype = "dashed") +
  labs(title = "TTR Distribution with Fitted Curves",
       x = "Time To Repair (hours)",
       y = "Density") +
  theme_minimal()

# Goodness of fit plots
p6 <- ggplot(ttr_2017_2021, aes(sample = TTR)) +
  stat_qq() +
  stat_qq_line(color = "#FF5252") +
  labs(title = "Q-Q Plot") +
  theme_minimal()

# Print summary statistics and goodness of fit tests
summary(ttr_2017_2021$TTR)
gof_stats <- gofstat(list(fit_weibull, fit_lnorm, fit_exp))
print(gof_stats)

# Arrange plots side by side
p5 + p6

```

```{r}
#| label: ttr-lognormal-fit-plot

# Fit lognormal distribution to TTR
# fit_lnorm <- fitdist(ttr_2017_2021$TTR, "lnorm")

# Plot histogram with fitted lognormal curve
ggplot(ttr_2017_2021, aes(x = TTR)) +
  geom_histogram(aes(y = ..density..), bins = 80, fill = "#90caf9", color = "black", alpha = 0.7) +
  stat_function(fun = dlnorm, args = list(meanlog = fit_lnorm$estimate[1], sdlog = fit_lnorm$estimate[2]), color = "#1565c0", size = 1.2) 
```


```{r}

boxcox_trans <- MASS::boxcox(lm(TTR ~ 1, data = ttr_2017_2021), lambda = seq(-1, 1), plotit = TRUE)

boxcox_lambda <- as.numeric(boxcox_trans$x[which.max(boxcox_trans$y)])

# New transformed response variable
ttr_2017_2021 <- ttr_2017_2021 |>
  mutate(TTR_bc = (TTR^boxcox_lambda - 1) / boxcox_lambda)



ttr_2017_2021 |>  
  ggplot(aes(x = TTR_bc)) +  
  geom_histogram(bins = 50, color = "seagreen", fill = "seagreen", alpha = 0.5) +  
  labs(x = "TTR [Box-Cox]")

ttr_2017_2021 |> 
  ggplot(aes(sample = TTR_bc)) + 
  stat_qq(color = "seagreen", alpha = 0.5) + 
  stat_qq_line(color = "seagreen") +   
  labs(y = "TTR\n[Box-Cox]", x = "Theoretical Quantiles (Norm. Dist.)")

```


```{r}

# Create histogram with density plot
p1 <- ggplot(ttr_2017_2021, aes(x = TTR)) +
  geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "#1E88E5", alpha = 0.7) +
  geom_density(color = "#FF5252", linewidth = 1) +
  labs(title = "Distribution of Time To Repair",
       x = "Time To Repair (hours)",
       y = "Density") +
  theme_minimal()

# Q-Q plot
p2 <- ggplot(ttr_2017_2021, aes(sample = TTR)) +
  stat_qq() +
  stat_qq_line(color = "#FF5252") +
  labs(title = "Q-Q Plot of Time To Repair") +
  theme_minimal()

# Basic statistics
summary_stats <- summary(ttr_2017_2021$TTR)

# Test for normality
shapiro_test <- shapiro.test(ttr_2017_2021$TTR)

# Arrange plots side by side
p1 + p2
```
